<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>getQuestionData</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	var filters = ['company', 'status', 'accounting_unit', 'year', 'period', 'account', 'over_1k_reviewed', 'manager_reviewed', 'supervisor_reviewed', 'answer_released', 'assigned_to', 'requested_by', 'over_1k'];
	var boolean_fields = ['over_1k_reviewed', 'manager_reviewed', 'supervisor_reviewed', 'answer_released', 'over_1k', 'is_generic'];
	var currency_fields = ['amount']
	var object_fields = ['assigned_to', 'watched_by'];
	var resp = {};
	var query = '';
	var unitsQuery = request.queryParams.availableAccountingUnits || '';
	var userSys_id = gs.getUserID();


	filters.forEach(function (field) {
		var ga = new GlideAggregate('x_aaro2_pnl_mgmt_question');
		ga.groupBy(field);
		//ga.addEncodedQuery(query);
		ga.addEncodedQuery(unitsQuery);
		ga.query();
		if (ga.hasNext()) {
			resp[field] = [];
			while (ga.next()) {
				resp[field].push({
					id: ga.getValue(field),
					label: ga.getDisplayValue(field)
				});
			}
		}
	});

	if (request.queryParams.query) {
		gs.info('request.queryParams.query[0] : ' + request.queryParams.query[0]);
		query = validateQuery(request.queryParams.query[0]);
	}
	gs.info('query : ' + query);
	gs.getUser().savePreference('x_aaro2_pnl_mgmt.question_filters', query);

	if (resp.year) {

		resp.period = [];

		resp.year.forEach(function (year) {
			var ga2 = new GlideAggregate('x_aaro2_pnl_mgmt_question');
			ga2.addQuery('year', year.id);
			//ga2.addEncodedQuery(query);
			ga2.addEncodedQuery(unitsQuery);
			ga2.groupBy('period');
			ga2.query();
			while (ga2.next()) {
				resp.period.push({ FiscalYear: year.id, AccountingPeriod: ga2.getValue('period') });
			}
		});
	}

	resp.questions = [];

	var grSection = new GlideRecord("sys_ui_section");
	grSection.addQuery('view=Default view^name=x_aaro2_pnl_mgmt_question');
	grSection.query();
	var fields = [];
	fields.push('sys_id');
	fields.push('sys_created_on');
	fields.push('watched_by');
	while (grSection.next()) {
		var grElement = new GlideRecord("sys_ui_element");
		grElement.addQuery("sys_ui_section", grSection.sys_id);
		grElement.addQuery("sys_ui_section!=5648a705db5f2450f41dc15b13961905^ORsys_ui_section=NULL")
		grElement.addNullQuery("type");
		grElement.query();
		while (grElement.next()) {
			fields.push(grElement.getValue('element'));
		}
	}

	var qGr = new GlideRecord('x_aaro2_pnl_mgmt_question');
	qGr.addEncodedQuery(query);
	qGr.addEncodedQuery(unitsQuery);
	qGr.query();
	while (qGr.next()) {
		var questionFields = {};
		fields.forEach(function (field) {
			if (~object_fields.indexOf(field)) {
				questionFields[field] = {
					value: qGr.getValue(field),
					displayValue: qGr.getDisplayValue(field)
				};
			} 
			else if (~boolean_fields.indexOf(field))
				questionFields[field] = !!+qGr.getValue(field);
			else if (~currency_fields.indexOf(field))
				questionFields[field] = Number(qGr.getValue(field))
			else {
				questionFields[field] = qGr.getDisplayValue(field);
			}
		});

		questionFields.watched_by_me = false;
		if (questionFields.watched_by.value == null) {
			questionFields.watched_by_me = false;
		} else if (~questionFields.watched_by.value.indexOf(userSys_id)) {
			questionFields.watched_by_me = true;
		}

		resp.questions.push(questionFields);
	}



	var role_access = [];
	accessGr = new GlideRecord('x_aaro2_pnl_mgmt_pnl_role_access');
	accessGr.query();
	while (accessGr.next()) {
		role_access.push({
			supervisor_review: !!+accessGr.getValue('supervisor_review'),
			can_ask: !!+accessGr.getValue('can_ask'),
			manager_review: !!+accessGr.getValue('manager_review'),
			ents_role_id: +accessGr.getValue('ents_role_id'),
			over_1k: !!+accessGr.getValue('over_1k'),
			ents_role_name: accessGr.getValue('ents_role_name'),
			can_answer: !!+accessGr.getValue('can_answer'),
		});
	}
	resp.role_access = role_access;
	resp.query = query;

	return resp;


	function validateQuery(inputQuery) {
		var validated_query = '';
		var pairs = inputQuery.split('^');
		var receivedFilters = [];
		pairs.forEach(function (pair) {
			if (pair) {
				var temp = pair.split('=');
				receivedFilters.push({
					name: temp[0],
					value: temp[1]
				});
			}
		});

		receivedFilters.forEach(function (elem) {
			var flag = false;
			if (resp.hasOwnProperty(elem.name)) {
				resp[elem.name].forEach(function (respObjElem) {
					if (respObjElem.id == elem.value) {
						flag = true;
					}
				});
			}
			if (flag) {
				validated_query += elem.name + '=' + elem.value + '^';
			}
		});
		if (validated_query) validated_query = validated_query.substring(0, validated_query.length - 1);
		gs.info('validated_query: ' + validated_query);
		return validated_query;
	}

})(request, response);]]></operation_script>
        <operation_uri>/api/x_aaro2_pnl_mgmt/utils/getQuestionData</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/getQuestionData</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>xxikochet</sys_created_by>
        <sys_created_on>2021-01-28 12:31:34</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>01960ae0db066450389b84d8689619b4</sys_id>
        <sys_mod_count>135</sys_mod_count>
        <sys_name>getQuestionData</sys_name>
        <sys_package display_value="PALMSnow" source="x_aaro2_pnl_mgmt">58a846e1db14ec50389b84d868961919</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="PALMSnow">58a846e1db14ec50389b84d868961919</sys_scope>
        <sys_update_name>sys_ws_operation_01960ae0db066450389b84d8689619b4</sys_update_name>
        <sys_updated_by>xxamirony</sys_updated_by>
        <sys_updated_on>2021-05-05 13:04:35</sys_updated_on>
        <web_service_definition display_value="utils">d3a7e6e5db5ce8505884eb184b961953</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
